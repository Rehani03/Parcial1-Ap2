@page "/producto"
@page "/producto/{productoId:int}"
@using Parcial1_Ap2.Models
@using Parcial1_Ap2.BLL

@inject IToastService toast

<EditForm Model="producto" OnValidSubmit="Guardar">
    <DataAnnotationsValidator/>

    <section class="form-register">
        
        <div class="card">

            <div class="card-header">
                <h3>Registro de Producto</h3>
            </div>

            <div class="card-body">
                <form>
                    <div class="form-row align-items-center">
                        <div class="col">
                            <div class="form-group">
                                <label>Producto ID:</label>
                                <div class="input-group">
                                    <InputNumber @bind-Value="producto.productoId" class="form-control col-4" />
                                    <ValidationMessage For="(() => producto.productoId)"></ValidationMessage>
                                    <div class="input-group-append">
                                        <button type="button" class="btn btn-primary input-group-text" @onclick="Buscar">Buscar</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <label>DESCRIPCION:</label>
                        <InputText @bind-Value="producto.descripcion" class="form-control" />
                        <ValidationMessage For="@(() => producto.descripcion)" />
                    </div>

                    <div class="form-group">
                        <label>EXISTENCIA:</label>
                        <InputNumber @bind-Value="producto.existencia" @onclick="CalcularValorInventario" class="form-control" />
                        <ValidationMessage For="@(() => producto.existencia)" />
                    </div>

                    <div class="form-group">
                        <label>COSTO:</label>
                        <InputNumber @bind-Value="producto.costo" @onclick="CalcularValorInventario" class="form-control" />
                        <ValidationMessage For="@(() => producto.costo)" />
                    </div>

                    <div class="form-group">
                        <label>VALOR INVENTARIO:</label>
                        <InputNumber @bind-Value="producto.valorInventario" class="form-control" readonly="true" />
                        <ValidationMessage For="@(() => producto.valorInventario)" />
                    </div>
                </form>
            </div>

            <div class="card-footer">
                <div class="form-group text-center" display: inline-block>
                    <button type="button" class="btn btn-lg btn-primary" @onclick="Nuevo">Nuevo</button>
                    <button type="submit" class="btn btn-lg btn-success">Guardar</button>
                    <button type="button" class="btn btn-lg btn-danger" @onclick="Eliminar">Eliminar</button>
                </div>
            </div>

        </div>

    </section>


</EditForm>


@code {

        Producto producto = new Producto();

    [Parameter]
    public int productoId { get; set; }

    protected override void OnInitialized()
    {
        Nuevo();
        Producto auxProducto;
        if (productoId > 0)
        {
            auxProducto = ProductoBLL.Buscar(productoId);
            if (auxProducto != null)
                producto = auxProducto;
            else
                toast.ShowInfo("No encontrado..");
        }
    }

    private void CalcularValorInventario()
    {
        decimal calculo = (producto.existencia*producto.costo);
        producto.valorInventario = calculo;
    }

    private void Nuevo()
    {
        this.producto = new Producto();
    }

    private void Buscar()
    {
        var encontrado = ProductoBLL.Buscar(producto.productoId);
        if (encontrado != null)
            this.producto = encontrado;
        else
        {
            toast.ShowWarning("No encontrado");
        }

    }

    private void Guardar()
    {
        bool paso;
        paso = ProductoBLL.Guardar(producto);

        if (paso)
        {
            Nuevo();
            toast.ShowSuccess("Guardado correctamente");
        }
        else
        {
            toast.ShowError("No fue posible guardar");
        }

    }

    private void Eliminar()
    {
        bool elimino;

        elimino = ProductoBLL.Eliminar(producto.productoId);

        if (elimino)
        {
            Nuevo();
            toast.ShowSuccess("Eliminado correctamente");
        }
        else
        {
            toast.ShowError("No fue posible eliminar");
        }
    }


}
